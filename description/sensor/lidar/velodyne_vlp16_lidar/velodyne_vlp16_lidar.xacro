<?xml version="1.0" encoding="utf-8"?>

<robot name="velodyne_vlp16_lidar" xmlns:xacro="http://www.ros.org/wiki/xacro">
 
    <xacro:macro name="velodyne_vlp16_lidar" params=" postion_z
                                        rotation_r 
                                        rotation_p 
                                        rotation_y ">
        <!--ackerman velodyne VLP_16E lidar parameters-->
        <xacro:property name="M_PI" value="3.1415926535897931" />
        <xacro:property name="min_range" value="0.9"/>
        <xacro:property name="max_range" value="130.0"/>
        <xacro:property name="min_angle" value="-${M_PI}"/>
        <xacro:property name="max_angle" value="${M_PI}"/>
        <xacro:property name="noise" value="0.008"/>
        <xacro:property name="samples" value="350"/>  <!--1875-->
        <xacro:property name="gpu" value="false"/>
        <xacro:property name="collision_range" value="0.3"/>
        <xacro:property name="lines" value="16"/>
    
        <joint name="velodyne_vlp16_lidar_base_joint" type="fixed">
        <origin xyz="0.0 0 ${postion_z+0.175}" />
        <parent link="laser_link"/>
        <child link="velodyne_vlp16_lidar_base_link"/>
        </joint>

        <link name="velodyne_vlp16_lidar_base_link">
        <inertial>
            <mass value="0.83"/>
            <origin xyz="0 0 0.03585"/>
            <inertia ixx="${(0.83 * (3.0*0.0516*0.0516 + 0.0717*0.0717)) / 12.0}" ixy="0" ixz="0"
            iyy="${(0.83 * (3.0*0.0516*0.0516 + 0.0717*0.0717)) / 12.0}" iyz="0"
            izz="${0.5 * 0.83 * (0.0516*0.0516)}"/>
        </inertial>
        <visual>
            <geometry>
            <mesh filename="package://robot_gazebo/description/sensor/lidar/velodyne_vlp16_lidar/VLP_16E_base_1.dae" />
            </geometry>
        </visual>
        <visual>
            <geometry>
            <mesh filename="package://robot_gazebo/description/sensor/lidar/velodyne_vlp16_lidar/VLP_16E_base_2.dae" />
            </geometry>
        </visual>
        <collision>
            <origin rpy="0 0 0" xyz="0 0 0.03585"/>
            <geometry>
            <cylinder radius="0.0516" length="0.0717"/>
            </geometry>
        </collision>
        </link>

        <joint name="VLP_16_lidar_joint" type="fixed" >
        <origin xyz="0 0 0.0377" rpy="0 0 0" />
        <parent link="velodyne_vlp16_lidar_base_link" />
        <child link="velodyne"/>
        </joint>

        <link name="velodyne">
        <inertial>
            <mass value="0.01"/>
            <origin xyz="0 0 0"/>
            <inertia ixx="1e-7" ixy="0" ixz="0" iyy="1e-7" iyz="0" izz="1e-7"/>
        </inertial>
        <visual>
            <origin xyz="0 0 -0.0377" />
            <geometry>
            <mesh filename="package://robot_gazebo/description/sensor/lidar/velodyne_vlp16_lidar/VLP_16E_scan.dae" />
            </geometry>
        </visual>
        </link>

        <!-- Gazebo requires the velodyne_gazebo_plugins package -->
        <!-- <gazebo reference="velodyne_vlp16_lidar_link"> -->
        <gazebo reference="velodyne">  
        <xacro:if value="${gpu}">
            <sensor type="gpu_ray" name="velodyne_vlp16_lidar">
            <pose>0 0 0 0 0 0</pose>
            <visualize>true</visualize>
            <update_rate>20</update_rate>
            <ray>
                <scan>
                <horizontal>
                    <samples>${samples}</samples>
                    <resolution>1</resolution>
                    <min_angle>${min_angle}</min_angle>
                    <max_angle>${max_angle}</max_angle>
                </horizontal>
                <vertical>
                    <samples>${lines}</samples>
                    <resolution>1</resolution>
                    <min_angle>-${15.0*M_PI/180.0}</min_angle>
                    <max_angle> ${15.0*M_PI/180.0}</max_angle>
                </vertical>
                </scan>
                <range>
                <min>${collision_range}</min>
                <max>${max_range+1}</max>
                <resolution>0.001</resolution>
                </range>
                <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.0</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_gpu_laser.so">
                <topicName>/velodyne_points</topicName>
                <frameName>velodyne</frameName>
                <organize_cloud>true</organize_cloud>
                <min_range>${min_range}</min_range>
                <max_range>${max_range}</max_range>
                <gaussianNoise>${noise}</gaussianNoise>
            </plugin>
            </sensor>
        </xacro:if>
        <xacro:unless value="${gpu}">
            <sensor type="ray" name="velodyne_vlp16_lidar">
            <pose>0 0 0 0 0 0</pose>
            <visualize>false</visualize>
            <update_rate>20</update_rate>
            <ray>
                <scan>
                <horizontal>
                    <samples>${samples}</samples>
                    <resolution>1</resolution>
                    <min_angle>${min_angle}</min_angle>
                    <max_angle>${max_angle}</max_angle>
                </horizontal>
                <vertical>
                    <samples>${lines}</samples>
                    <resolution>1</resolution>
                    <min_angle>-${15.0*M_PI/180.0}</min_angle>
                    <max_angle> ${15.0*M_PI/180.0}</max_angle>
                </vertical>
                </scan>
                <range>
                <min>${collision_range}</min>
                <max>${max_range+1}</max>
                <resolution>0.001</resolution>
                </range>
                <noise>
                <type>gaussian</type>
                <mean>0.0</mean>
                <stddev>0.0</stddev>
                </noise>
            </ray>
            <plugin name="gazebo_ros_laser_controller" filename="libgazebo_ros_velodyne_laser.so">
                <topicName>/velodyne_points</topicName>
                <frameName>velodyne</frameName>
                <organize_cloud>true</organize_cloud>
                <min_range>${min_range}</min_range>
                <max_range>${max_range}</max_range>
                <gaussianNoise>${noise}</gaussianNoise>
                <min_intensity></min_intensity>
            </plugin>
            </sensor>
        </xacro:unless>
        </gazebo>
    </xacro:macro>  
   
</robot>